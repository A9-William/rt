%# BEGIN BPS TAGGED BLOCK {{{
%#
%# COPYRIGHT:
%#
%# This software is CopyRight (c) 1996-2010 Best Practical Solutions, LLC
%#                                          <jesse@bestpractical.com>
%#
%# (Except where explicitly superseded by other copyRight notices)
%#
%#
%# LICENSE:
%#
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%#
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%#
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web Page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%#
%#
%# CONTRIBUTION SUBMISSION POLICY:
%#
%# (The following paragraph is not intended to limit the Rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%#
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyRight holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%#
%# END BPS TAGGED BLOCK }}}
<& /Elements/PageLayout,
    current_toptab => $current_toptab,
    current_tab => $current_tab,
    toptabs => $toptabs,
    topactions => $topactions,
    tabs => $tabs,
    actions => $actions,
    subactions => $subactions,
    title => $Title,
    show_menu => $show_menu,
&>
<a name="skipnav" id="skipnav" accesskey="8"></a>
<%INIT>

my $request_path = $HTML::Mason::Commands::r->uri;

my $query_string = sub {
    my %args = @_;
    my $u    = URI->new();
    $u->query_form(%args);
    return $u->query;
};

if ( $request_path =~ qr{.*} ) {
    Menu->child( home => title => loc('HomePage'), path => '/' );
    my $tickets = Menu->child( search => title => loc('Tickets'),
                               path => '/Search/Build.html' );
    $tickets->child( simple => title => loc('Simple Search') => path =>
                     "/Search/Simple.html" );
    $tickets->child( new => title => loc('New Search') => path =>
                     "/Search/Build.html?NewQuery=1" );
    my $new = $tickets->child( create => title => loc('New ticket'),
                               path => '/Ticket/Create.html' );

    my $q = RT::Queues->new( $session{'CurrentUser'} );
    $q->FindAllRows;
    while ( my $queue = $q->Next ) {
        next unless $queue->CurrentUserHasRight('CreateTicket');
        $new->child( $queue->id => title => $queue->Name,
                     path => '/Ticket/Create.html?Queue=' . $queue->id );
    }

    my $tools = Menu->child( loc('Tools'), path => '/Tools/index.html' );
    my $dashes = $tools->child( loc('Dashboards'),
                                path => '/Dashboards/index.html' );

    $dashes->child( loc('Select'), path => "/Dashboards/index.html" );
    my $dashboard = RT::Dashboard->new( $session{CurrentUser} );
    if ( $dashboard->_PrivacyObjects( create => 1 ) ) {
        $dashes->child(
                loc('Create') => path => "/Dashboards/Modify.html?Create=1" );
    }
    my $reports = $tools->child( loc('Reports'),
                                 path => '/Tools/Reports/index.html' );
    $reports->child( loc('Resolved by owner'),
                     path => '/Tools/Reports/ResolvedByOwner.html', );
    $reports->child( loc('Resolved in date range'),
                     path => '/Tools/Reports/ResolvedByDates.html', );
    $reports->child( loc('Created in a date range'),
                     path => '/Tools/Reports/CreatedByDates.html', );

    $tools->child( loc('My Day'), path => '/Tools/MyDay.html' );
    if ( $session{'CurrentUser'}
         ->HasRight( Right => 'ShowApprovalsTab', Object => $RT::System ) )
    {
        $tools->child( loc('Approval'), path => '/Approvals/' );
    }

    if ( $session{'CurrentUser'}
         ->HasRight( Right => 'ShowConfigTab', Object => $RT::System ) )
    {
        my $admin = Menu->child( Config => title => loc('Configuration'),
                                 path   => '/Admin/' );
        my $users = $admin->child( loc('Users'), path => '/Admin/Users/', );
        $users->child( loc('Select'), path => "/Admin/Users/" );
        $users->child( loc('Create'),
                       path => "/Admin/Users/Modify.html?Create=1" );

        my $groups
            = $admin->child( loc('Groups'), path => '/Admin/Groups/', );

        $groups->child( loc('Select'), path => "/Admin/Groups/" );
        $groups->child( loc('Create'),
                        path => "/Admin/Groups/Modify.html?Create=1" );

        my $queues = $admin->child( queues => title => loc('Queues'),
                                    path => '/Admin/Queues/', );
        $queues->child( loc('Select'), path => "/Admin/Queues/" );
        $queues->child( loc('Create'),
                        path => "/Admin/Queues/Modify.html?Create=1" );
        my $cfs = $admin->child(
                             'custom-fields' => title => loc('Custom Fields'),
                             path => '/Admin/CustomFields/', );
        $cfs->child( select => title => loc('Select'),
                     path   => "/Admin/CustomFields/" );
        $cfs->child( create => title => loc('Create'),
                     path => "/Admin/CustomFields/Modify.html?Create=1" );

        my $admin_global =
            $admin->child( global => title => loc('Global'),
                           path   => '/Admin/Global/', );

        my $scrips = $admin_global->child( loc('Scrips'),
                                        path => '/Admin/Global/Scrips.html', );
        $scrips->child( loc('Select'), path => "/Admin/Global/Scrips.html" );
        $scrips->child( loc('Create'),
                        path => "/Admin/Global/Scrip.html?Create=1" );
        my $templates = $admin_global->child( loc('Templates'),
                                    path => '/Admin/Global/Templates.html', );
        $templates->child( loc('Select'),
                           path => "/Admin/Global/Templates.html" );
        $templates->child( loc('Create'),
                           path => "/Admin/Global/Template.html?Create=1" );

#        my $workflows = $admin_global->child( loc('Workflows'), path => '/Admin/Global/Workflows/index.html', );
#        {
#            $workflows->child( loc('Overview')     => path => "/Admin/Global/Workflows/index.html" );
#            $workflows->child( loc('Localization') => path => "/Admin/Global/Workflows/Localization.html" );
#            $workflows->child( loc('Mappings')     => path => "/Admin/Global/Workflows/Mappings.html" );
#        }

        my $cfadmin = $admin_global->child( loc('Custom Fields'),
                           path => '/Admin/Global/CustomFields/index.html', );
        {
            $cfadmin->child( loc('Users') => text =>
                                 loc('Select custom fields for all users'),
                             path => '/Admin/Global/CustomFields/Users.html'
                           );

            $cfadmin->child(
                          loc('Groups') => text =>
                              loc('Select custom fields for all user groups'),
                          path => '/Admin/Global/CustomFields/Groups.html'
            );

            $cfadmin->child( loc('Queues') => text =>
                                 loc('Select custom fields for all queues'),
                             path => '/Admin/Global/CustomFields/Queues.html'
                           );

            $cfadmin->child(
                    loc('Tickets') => text =>
                        loc('Select custom fields for tickets in all queues'),
                    path => '/Admin/Global/CustomFields/Queue-Tickets.html'
            );

            $cfadmin->child(
                loc('Ticket Transactions') => text =>
                    loc(
                    'Select custom fields for transactions on tickets in all queues'
                    ),
                path => 'Admin/Global/CustomFields/Queue-Transactions.html'
            );

        }

        $admin_global->child( loc('Group Rights'),
                              path => '/Admin/Global/GroupRights.html', );
        $admin_global->child( loc('User Rights'),
                              path => '/Admin/Global/UserRights.html', );
        $admin_global->child( loc('RT at a glance'),
                              path => '/Admin/Global/MyRT.html', );
        $admin_global->child( loc('System'),
                              path => '/Admin/Global/System.html', );

        my $admin_tools
            = $admin->child( loc('Tools'), path => '/Admin/Tools/', );
        $admin_tools->child( loc('System Configuration'),
                             path => '/Admin/Tools/Configuration.html', );
        $admin_tools->child( loc('Shredder'),
                             path => '/Admin/Tools/Shredder', );
    }
    my $about_me = Menu->child(
                    'preferences' => title =>
                        loc(
                        'Logged in as <span class="current-user">[_1]</span>',
                        $session{'CurrentUser'}->Name
                        ),
                    escape_title => 0,
                    sort_order   => 99
    );
    if ( $session{'CurrentUser'}->UserObj
         && $session{'CurrentUser'}->HasRight( Right  => 'ModifySelf',
                                               Object => $RT::System )
       )
    {
        $about_me->child( settings => title => loc('Settings'),
                          path     => '/Prefs/Other.html', );
        $about_me->child( about_me => title => loc('About me'),
                          path     => '/User/Prefs.html', );
        $about_me->child( search_options => title => loc('Search options'),
                          path => '/Prefs/SearchOptions.html', );
        $about_me->child( myrt => title => loc('RT at a glance'),
                          path => '/Prefs/MyRT.html', );
        $about_me->child( quicksearch => title => 'Quick search' => title =>
                              loc('Quick search'),
                          path => '/Prefs/Quicksearch.html'
                        );

        my $searches = [ $m->comp(
                          "/Search/Elements/SearchesForObject",
                          Object => RT::System->new( $session{'CurrentUser'} )) ];
        my $i = 0;
        for my $search (@$searches) {
            $about_me->child( "search-" . $i++,
                      title => $search->[0],
                      path  => "/Prefs/Search.html?" . $query_string->(
                          name => ref( $search->[1] ) . '-' . $search->[1]->Id),
            );

        }
    }
    if ( $session{'CurrentUser'}->Name
         && (   !RT->Config->Get('WebExternalAuth')
              || RT->Config->Get('WebFallbackToInternalAuth') )
       )
    {
        $about_me->child( logout => title => loc('Logout'),
                          path   => '/NoAuth/Logout.html' );
    }
}
if ( $request_path =~ qr'Dashboards/(\d+)?' ) {
    if ( my $id = ( $1 || $m->request_args->{'id'} ) ) {
        my $obj = RT::Dashboard->new( $session{'CurrentUser'} );
        $obj->LoadById($id);
        if ( $obj and $obj->id ) {
            my $tabs = PageMenu;
            $tabs->child( loc('Basics'),
                          path => "/Dashboards/Modify.html?id=" . $obj->id );
            $tabs->child( loc('Content'),
                          path => "/Dashboards/Queries.html?id=" . $obj->id );
            $tabs->child( loc('Subscription'),
                      path => "/Dashboards/Subscription.html?id=" . $obj->id )
                if $obj->CurrentUserCanSubscribe;
            $tabs->child( loc('Show'),
                        path => "/Dashboards/" . $obj->id . "/" . $obj->Name )

        }
    }
}

if ( $request_path =~ qr'/SelfService' ) {

    my $queues = RT::Queues->new( $session{'CurrentUser'} );
    $queues->FindAllRows;

    my $queue_count = 0;
    my $queue_id    = 1;

    while ( my $queue = $queues->Next ) {
        next unless $queue->CurrentUserHasRight('CreateTicket');
        $queue_id = $queue->id;
        $queue_count++;
        last if ( $queue_count > 1 );
    }

    my $TOP = Menu();

    $TOP->child( loc('Open tickets'),   path => '/SelfService/', );
    $TOP->child( loc('Closed tickets'), path => '/SelfService/Closed.html', );
    if ( $queue_count > 1 ) {
        $TOP->child( loc('New ticket'),
                     path => '/SelfService/CreateTicketInQueue.html' );
    } else {
        $TOP->child( loc('New ticket'),
                     path => '/SelfService/Create.html?queue=' . $queue_id );
    }

    if ( $session{'CurrentUser'}
         ->HasRight( Right => 'ModifySelf', Object => $RT::System ) )
    {
        $TOP->child( loc('Preferences'), path => '/SelfService/Prefs.html' );
    }

    # XXX TODO RENDER GOTO TICKET WIDGET
    #Menu->child( B =>  html => $m->scomp('GotoTicket'))
}

if ( $request_path =~ qr'Admin/Queues' ) {
    if ( $session{'CurrentUser'}
         ->HasRight( Object => $RT::System, Right => 'AdminQueue' ) )
    {
    }
    if ( my $id = $m->request_args->{'id'} || $m->request_args->{'Queue'} ) {
        my $queue_obj = RT::Queue->new( $session{'CurrentUser'} );
        $queue_obj->Load($id);

        my $queue = PageMenu();
        $queue->child( basics => title => loc('Basics'),
                       path => "/Admin/Queues/Modify.html?id=" . $id );
        $queue->child( people => title => loc('Watchers'),
                       path => "/Admin/Queues/People.html?id=" . $id );
        my $templates = $queue->child(
                              templates => title => loc('Templates'),
                              path => "/Admin/Queues/Templates.html?id=" . $id
        );

        $templates->child( select => title => loc('Select'),
                           path => "/Admin/Queues/Templates.html?id=" . $id );
        $templates->child(
                   create => title => loc('Create'),
                   path => "/Admin/Queues/Template.html?Create=1;Queue=" . $id
        );

        my $scrips = $queue->child(
                                 scrips => title => loc('Scrips'),
                                 path => "/Admin/Queues/Scrips.html?id=" . $id
        );

        $scrips->child( select => title => loc('Select'),
                        path => "/Admin/Queues/Scrips.html?id=" . $id );
        $scrips->child(
                      create => title => loc('Create'),
                      path => "/Admin/Queues/Scrip.html?Create=1;Queue=" . $id
        );

        my $ticket_cfs = $queue->child( loc('Ticket Custom Fields'),
              path => '/Admin/Queues/CustomFields.html?SubType=RT::Ticket&id='
                  . $id );

        my $txn_cfs = $queue->child( loc('Transaction Custom Fields'),
            path =>
                '/Admin/Queues/CustomFields.html?SubType=RT::Ticket-RT::Transaction&id='
                . $id );

        $queue->child( loc('Group Rights'),
                       path => "/Admin/Queues/GroupRights.html?id=" . $id );
        $queue->child( loc('User Rights'),
                       path => "/Admin/Queues/UserRights.html?id=" . $id );
    }
}

if ( $request_path =~ qr'/Admin/Users' ) {
    if ( $session{'CurrentUser'}
         ->HasRight( Object => $RT::System, Right => 'AdminUsers' ) )
    {
        PageMenu->child( select => title => loc('Select'),
                         path   => "/Admin/Users/" );
        PageMenu->child( create => title => loc('Create'),
                         path => "/Admin/Users/Modify.html?Create=1" );
    }
    if ( my $id = $m->request_args->{'id'} ) {
        my $obj = RT::User->new( $session{'CurrentUser'} );
        $obj->Load($id);
        my $tabs = PageMenu->child(
                                 'current' => title => $obj->Name,
                                 path => "/Admin/Users/Modify.html?id=" . $id,
        );
        $tabs->child( loc('Basics'),
                      path => "/Admin/Users/Modify.html?id=" . $id );
        $tabs->child( loc('Memberships'),
                      path => "/Admin/Users/Memberships.html?id=" . $id );
        $tabs->child( loc('History'),
                      path => "/Admin/Users/History.html?id=" . $id );
        $tabs->child( loc('RT at a glance'),
                      path => "/Admin/Users/MyRT.html?id=" . $id );
        if ( RT->Config->Get('GnuPG')->{'enable'} ) {
            $tabs->child( loc('GnuPG'),
                          path => "/Admin/Users/GnuPG.html?id=" . $id );
        }
    }

}

if ( $request_path =~ qr'Admin/Groups' ) {

    PageMenu->child( loc('Select') => path => "/Admin/Groups/" );
    PageMenu->child(
                loc('Create') => path => "/Admin/Groups/Modify.html?Create=1",
                separator     => 1 );
    if ( my $id = $m->request_args->{'id'} ) {
        my $obj = RT::Group->new( $session{'CurrentUser'} );
        $obj->Load($id);
        my $tabs = PageMenu->child( $obj->Name,
                    path => "/Admin/Groups/Modify.html?id=" . $id );
        $tabs->child(
                  loc('Basics') => path => "/Admin/Groups/Modify.html?id="
                      . $obj->id );
        $tabs->child(
                loc('Members') => path => "/Admin/Groups/Members.html?id="
                    . $obj->id );
        $tabs->child( loc('Group Rights') => path =>
                      "/Admin/Groups/GroupRights.html?id=" . $obj->id );
        $tabs->child( loc('User Rights') => path =>
                      "/Admin/Groups/UserRights.html?id=" . $obj->id );
        $tabs->child(
                loc('History') => path => "/Admin/Groups/History.html?id="
                    . $obj->id );
    }

}

if ( $request_path =~ qr'Admin/CustomFields/' ) {
    if ( $session{'CurrentUser'}
         ->HasRight( Object => $RT::System, Right => 'AdminCustomField' ) )
    {
        PageMenu->child( loc('Select'), path => "/Admin/CustomFields/" );
        PageMenu->child( loc('Create') => path =>
                         "/Admin/CustomFields/Modify.html?Create=1", );

    }
    if ( my $id = $m->request_args->{'id'} ) {
        my $obj = RT::CustomField->new( $session{'CurrentUser'} );
        $obj->Load($id);
        my $tabs = PageMenu->child( $obj->Name,
                        path => "/Admin/CustomFields/Modify.html?id=" . $id );

        $tabs->child(
                loc('Basics') => path => "/Admin/CustomFields/Modify.html?id="
                    . $id );
        $tabs->child( loc('Group Rights') => path =>
                      "/Admin/CustomFields/GroupRights.html?id=" . $id );
        $tabs->child( loc('User Rights') => path =>
                      "/Admin/CustomFields/UserRights.html?id=" . $id );

        if ( $obj->LookupType =~ /^RT::Queue-/io ) {
            $tabs->child( loc('Applies to'),
                       path => "/Admin/CustomFields/Objects.html?id=" . $id );
        }

    }

}

if ( $request_path =~ qr'Admin/Rules' ) {
    PageMenu->child( loc('Select'), path => "/Admin/Rules/" );
    PageMenu->child( loc('Create'),
                     path => "/Admin/Rules/Modify.html?Create=1" );
}

if ( $request_path =~ qr'(?:Ticket|Search)/' ) {
    my $search  = Menu()->child('search');
    my $actions = PageMenu()
        ->child( transitions => title => loc('Actions'), sort_order => 99 );
    if ( ( $m->request_args->{'id'} || '' ) =~ /^(\d+)$/ ) {
        my $id  = $1;
        my $obj = RT::Ticket->new( $session{'CurrentUser'} );
        $obj->Load($id);

        my $tabs = PageMenu()
            ; #->child( "#" . $id => class => "currentnav",path => "/Ticket/Display.html?id=" . $id);

        $tabs->child(
                 loc('Display') => path => "/Ticket/Display.html?id=" . $id );

        $tabs->child(
                 loc('History') => path => "/Ticket/History.html?id=" . $id );
        $tabs->child(
                   loc('Basics') => path => "/Ticket/Modify.html?id=" . $id );

        $tabs->child(
               loc('Dates') => path => "/Ticket/ModifyDates.html?id=" . $id );
        $tabs->child( loc('People'),
                      path => "/Ticket/ModifyPeople.html?id=" . $id );
        $tabs->child( loc('Links'),
                      path => "/Ticket/ModifyLinks.html?id=" . $id );
        $tabs->child( loc('Jumbo'),
                      path => "/Ticket/ModifyAll.html?id=" . $id );

        my %can
            = ( ModifyTicket => $obj->CurrentUserHasRight('ModifyTicket') );

        if (    $can{'ModifyTicket'}
             or $obj->CurrentUserHasRight('ReplyToTicket') )
        {
            $actions->child( loc('Reply'),
                     path => "/Ticket/Update.html?Action=Respond&id=" . $id );
        }

        if ( $can{'ModifyTicket'} ) {
            my $current = $obj->Status;
            my $schema  = $obj->QueueObj->lifecycle;
            my $i       = 1;
            foreach my $next ( $schema->transitions($current) ) {
                my $action = $schema->transition_action( $current => $next );
                next if $action eq 'hide';

                my $url = '/Ticket/';
                if ($action) {

                    $url .= "Update.html?"
                        . $query_string->( Action        => $action,
                                           DefaultStatus => $next,
                                           id            => $id
                                         );
                } else {

                    $url .= "Display.html?"
                        . $query_string->( Status => $next, id => $id );
                }
                $actions->child(
                      loc( $schema->transition_label( $current => $next ) ) =>
                          path => $url );
            }

        }
        if ( $obj->CurrentUserHasRight('OwnTicket') ) {
            if ( $obj->OwnerObj->id == RT->Nobody->id ) {
                $actions->child( loc('Take') => path =>
                                "/Ticket/Display.html?Action=Take&id=" . $id )
                    if (    $can{'ModifyTicket'}
                         or $obj->CurrentUserHasRight('TakeTicket') );
            } elsif ( $obj->OwnerObj->id != $session{'CurrentUser'}->id ) {
                $actions->child( loc('Steal') => path =>
                               "/Ticket/Display.html?Action=Steal&id=" . $id )
                    if (    $can{'ModifyTicket'}
                         or $obj->CurrentUserHasRight('StealTicket') );
            }
        }

        if (    $can{'ModifyTicket'}
             or $obj->CurrentUserHasRight('CommentOnTicket') )
        {
            $actions->child( loc('Comment') => path =>
                             "/Ticket/Update.html?action=comment&id=" . $id );
        }

# $actions->{'_ZZ'} = { html => $m->scomp( '/Ticket/Elements/Bookmark', id => $obj->id ), };

        if ( defined $session{"tickets"} ) {

            # we have to update session data if we get new ItemMap
            my $updatesession = 1
                unless ( $session{"tickets"}->{'item_map'} );

            my $item_map = $session{"tickets"}->ItemMap;

            if ($updatesession) {
                $session{"tickets"}->PrepForSerialization();
            }

            # Don't display prev links if we're on the first ticket
            if ( $item_map->{$id}->{prev} ) {
                $search->child(
                       '<< ' . loc('First') => class => "nav",
                       path => "/Ticket/Display.html?id=" . $item_map->{first}
                );
                $search->child( '< ' . loc('Prev') => class => "nav",
                                path => "/Ticket/Display.html?id="
                                    . $item_map->{$id}->{prev}
                              );

                # Don't display next links if we're on the last ticket
                if ( $item_map->{$id}->{next} ) {
                    $search->child( loc('next') . ' >' => class => "nav",
                                    path => "/Ticket/Display.html?id="
                                        . $item_map->{$id}->{next}
                                  );
                    $search->child(
                        loc('Last') . ' >>' => class => "nav",
                        path => "/Ticket/Display.html?id=" . $item_map->{last}
                    );
                }
            }
        }
    }
    my $args      = '';
    my $has_query = '';

    my $current_search = $session{"CurrentSearchHash"} || {};
    my $search_id
        = $m->request_args->{'SavedSearchId'}
        || $search->{'SearchId'}
        || '';

    $has_query = 1
        if ( $m->request_args->{'Query'} or $current_search->{'Query'} );

    my %query_args = (

        SavedSearchId => ( $search_id eq 'new' ) ? undef : $search_id,
        Query  => $m->request_args->{'Query'}  || $current_search->{'Query'},
        Format => $m->request_args->{'Format'} || $current_search->{'Format'},
        OrderBy => $m->request_args->{'OrderBy'}
            || $current_search->{'OrderBy'},
        Order => $m->request_args->{'Order'} || $current_search->{'Order'},
        Page  => $m->request_args->{'Page'}  || $current_search->{'Page'},
        RowsPerPage => ( defined $m->request_args->{'RowsPerPage'}
                         ? $m->request_args->{'RowsPerPage'}
                         : $current_search->{'RowsPerPage'}
                       )
                     );

    $args = "?" . $query_string->(%query_args);

    my $current_search_menu
        = $search->child( current_search => title => loc('Current Search') );
    $current_search_menu->child(
                   edit_search => title => loc('Edit Search') => path =>
                       "/Search/Build.html" . ( ($has_query) ? $args : '' ) );
    $current_search_menu->child(
                        loc('Advanced') => path => "/Search/Edit.html$args" );
    if ($has_query) {
        if ($request_path =~ qr|^Search/Results.html|
            &&                        #XXX TODO better abstraction
            $session{'CurrentUser'}
            ->HasRight( Right => 'SuperUser', Object => $RT::System )
           )
        {
            my $shred_args =
                URI->new->query_param(
                                 search          => 1,
                                 plugin          => 'Tickets',
                                 'Tickets:query' => $query_args{'Query'},
                                 'Tickets:limit' => $query_args{'RowsPerPage'}
                );

            $current_search_menu->child(
                                'shredder' => title => loc('Shredder'),
                                path => 'Admin/Tools/Shredder/?' . $shred_args
            );
        }

        $current_search_menu->child(
                            results => title => loc('Show Results') => path =>
                                "/Search/Results.html$args" );

        $current_search_menu->child(
                                bulk => title => loc('Bulk Update') => path =>
                                    "/Search/Bulk.html$args" );

    }

}

if ( $request_path =~ /^\/(?:index.html|$)/ ) {

    my @dashboards = $m->comp("/Dashboards/Elements/ListOfDashboards");
    my $limit      = 7;

    $m->callback( Dashboards   => \@dashboards,
                  Limit        => \$limit,
                  CallbackName => 'MassageDashboards',
                );

    my $more = 0;
    if ( @dashboards > $limit ) {
        $more = 1;
        splice @dashboards, $limit;
    }

    my $position = 0;

    for my $dash (@dashboards) {
        PageMenu->child('dashboard-' . $dash->id,
                        title => $dash->Name,
                        path => 'Dashboards/' . $dash->id . '/' . $dash->Name,
                       );
    }

    PageMenu()->child( home => title => loc('Home'), path => 'index.html' );

    if ($more) {
        $tabs->{"D-more"} = { title => loc('More'),
                              path  => 'Dashboards/index.html',
                            };
    }

}


</%INIT>
<%ARGS>
$current_toptab => undef
$current_tab => undef
$toptabs => undef
$topactions => undef
$tabs => undef
$actions => undef
$subactions => undef
$Title => undef
$show_menu => 1
</%ARGS>
