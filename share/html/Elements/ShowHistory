%# BEGIN BPS TAGGED BLOCK {{{
%# 
%# COPYRIGHT:
%# 
%# This software is Copyright (c) 1996-2009 Best Practical Solutions, LLC
%#                                          <jesse@bestpractical.com>
%# 
%# (Except where explicitly superseded by other copyright notices)
%# 
%# 
%# LICENSE:
%# 
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%# 
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%# 
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%# 
%# 
%# CONTRIBUTION SUBMISSION POLICY:
%# 
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%# 
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%# 
%# END BPS TAGGED BLOCK }}}
<div class="history <% lc $record_type %>">
<%perl>
if ( $ShowDisplayModes or $ShowTitle ) {
    my $title = $ShowTitle
                    ? loc('History')
                    : '&nbsp;';

    my $titleright = '';
    if ( $ShowDisplayModes ) {
        my $open_all  = $m->interp->apply_escapes( loc("Show all quoted text"), 'j' );
        my $open_html = $m->interp->apply_escapes( loc("Show all quoted text"), 'h' );
        my $close_all = $m->interp->apply_escapes( loc("Hide all quoted text"), 'j' );
        $titleright .=    '<a href="#" data-direction="open" '
                        . qq{onclick="return toggle_all_folds(this, $open_all, $close_all);"}
                        . ">$open_html</a> &mdash; ";

        if ($ShowHeaders) {
            $titleright .= qq{<a href="?id=} .
                           $Object->id.qq{">} .
                           loc("Show brief headers") .
                           qq{</a>};
        } else {
            $titleright .= qq{<a href="?ShowHeaders=1;id=} .
                           $Object->id.qq{">} .
                           loc("Show full headers") .
                           qq{</a>};
        }
    }
</%perl>
<& /Widgets/TitleBoxStart, title => $title, titleright_raw => $titleright &>
% }

<div id="<% lc $record_type %>-<% $Object->id %>-history" class="history-container">
<%perl>
my $i = 1;
while ( my $Transaction = $Transactions->Next ) {
    my $skip = 0;
    $m->callback(
        %ARGS,
        Transaction   => $Transaction,
        skip          => \$skip,
        CallbackName  => 'SkipTransaction',
    );
    next if $skip;

    my $IsLastTransaction = 0;
    if ( $OldestFirst ) {
        $IsLastTransaction = $Transactions->IsLast;
    } else {
        $IsLastTransaction = 1 if $i == 1;
    }

    # ARGS is first because we're clobbering the "Attachments" parameter
    $m->comp( 'ShowTransaction',
        %ARGS,
        Object            => $Object,
        Transaction       => $Transaction,
        ShowHeaders       => $ShowHeaders,
        RowNum            => $i,
        Attachments       => $trans_attachments->{$Transaction->id} || {},
        AttachmentContent => $trans_content,
        LastTransaction   => $IsLastTransaction
    );

    # manually flush the content buffer after each txn,
    # so the user sees some update
    $m->flush_buffer;

    $i++;
}

</%perl>
</div>
% if ($ShowDisplayModes or $ShowTitle) {
<& /Widgets/TitleBoxEnd &>
% }
</div>
<%INIT>
my $OldestFirst = RT->Config->Get(
    OldestTransactionsFirst => $session{'CurrentUser'}
);
my $SortOrder = $OldestFirst? 'ASC': 'DESC';
$Transactions->OrderByCols(
    { FIELD => 'Created', ORDER => $SortOrder },
    { FIELD => 'id', ORDER => $SortOrder },
);

my $trans_content = {};
my $trans_attachments = {};

for my $content (@{$AttachmentContent->ItemsArrayRef()}) {
    $trans_content->{$content->TransactionId}->{$content->Id} = $content;
}

for my $attachment (@{$Attachments->ItemsArrayRef()}) {
    my $tmp = $trans_attachments->{ $attachment->TransactionId } ||= {};
    push @{ $tmp->{ $attachment->Parent || 0 } ||= [] }, $attachment;
}

{
    my %tmp = (
        DisplayPath     => 'Display.html',
        AttachmentPath  => 'Attachment',
        UpdatePath      => 'Update.html',
        ForwardPath     => 'Forward.html',
        EmailRecordPath => 'ShowEmailRecord.html',
        EncryptionPath  => 'GnuPG.html',
    );

    while ( my ($arg, $path) = each %tmp ) {
        next if defined $ARGS{ $arg };
        $ARGS{ $arg } = $path;
    }
}

my $record_type = $Object->RecordType;
</%INIT>
<%ARGS>
$Object
$Transactions      => $Object->Transactions
$Attachments       => $Object->Attachments( WithHeaders => 1 )
$AttachmentContent => $Object->TextAttachments

$ShowHeaders       => 0
$ShowTitle         => 1
$ShowDisplayModes  => 1
</%ARGS>
