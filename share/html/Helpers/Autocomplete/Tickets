%# BEGIN BPS TAGGED BLOCK {{{
%#
%# COPYRIGHT:
%#
%# This software is Copyright (c) 1996-2013 Best Practical Solutions, LLC
%#                                          <jesse@bestpractical.com>
%#
%# (Except where explicitly superseded by other copyright notices)
%#
%#
%# LICENSE:
%#
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%#
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%#
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%#
%#
%# CONTRIBUTION SUBMISSION POLICY:
%#
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%#
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%#
%# END BPS TAGGED BLOCK }}}
% $r->content_type('application/json; charset=utf-8');
<% JSON( \@suggestions ) |n %>
% $m->abort;
<%ARGS>
$return => ''
$term => undef
$max => 10
$exclude => ''
</%ARGS>
<%INIT>
# Only allow certain return fields
$return = 'id'
    unless $return =~ /^(?:id|Subject)$/;

$m->abort unless defined $return
             and defined $term
             and length $term;

my $CurrentUser = $session{'CurrentUser'};

# Require privileged users
$m->abort unless $CurrentUser->Privileged;

$term =~ s/(['\\])/\\$1/g;

my @excludes;

if ( $term =~ /[^\d\s]/ ) { # to search subject, which may contain spaces
    (my $prev, $term) = $term =~ /(.*?)\s*\b([^\d\s].*)/;
    @excludes = split /\s+/, $prev if $prev;
}
else {
    my @terms = split /\s+/, $term;
    $term = pop @terms;
    @excludes = @terms;
}
push @excludes, split /\s+/, $exclude if $exclude;

my %fields = %{ RT->Config->Get('TicketAutocompleteFields')
                || { id => 'STARTSWITH', Subject => 'LIKE' } };

my $tickets = RT::Tickets->new( $CurrentUser );

my @clauses;
while (my ($name, $op) = each %fields) {
    $op = 'STARTSWITH'
        unless $op =~ /^(?:LIKE|(?:START|END)SWITH|=|!=)$/i;
    push @clauses, qq{$name $op '$term'};
}
my $sql = join ' OR ', @clauses;
if ( @excludes ) { # exclude ids already these
    $sql = join ' AND ', "($sql)", map { qq{id != '$_'} } @excludes;
}

$tickets->FromSQL($sql);
$tickets->RowsPerPage( $max );

my @suggestions;

while ( my $ticket = $tickets->Next ) {
    my $formatted = loc("#[_1]: [_2]", $ticket->Id, $ticket->Subject);
    push @suggestions, { label => $formatted, value => $ticket->$return };
}

</%INIT>
