


# Autogenerated by DBIx::SearchBuilder factory (by <jesse@bestpractical.com>)
# WARNING: THIS FILE IS AUTOGENERATED. ALL CHANGES TO THIS FILE WILL BE LOST.  
# 
# !! DO NOT EDIT THIS FILE !!
#


=head1 NAME

RT::FM::ArticleCFValue


=head1 SYNOPSIS

=head1 DESCRIPTION

=head1 METHODS

=cut

package RT::FM::ArticleCFValue;
use RT::FM::Record; 


use base qw( RT::FM::Record );

sub _Init {
  my $self = shift; 

  $self->Table('FM_ArticleCFValues');
  $self->SUPER::_Init(@_);
}





=item Create PARAMHASH

Create takes a hash of values and creates a row in the database:

  int(11) 'Article'.
  int(11) 'CustomField'.
  text 'Content'.

=cut




sub Create {
    my $self = shift;
    my %args = ( 
                Article => '0',
                CustomField => '0',
                Content => '',

		  @_);
    $self->SUPER::Create(
                         Article => $args{'Article'},
                         CustomField => $args{'CustomField'},
                         Content => $args{'Content'},
);

}



=item id

Returns the current value of id. 
(In the database, id is stored as int(11).)


=cut


=item Article

Returns the current value of Article. 
(In the database, Article is stored as int(11).)



=item SetArticle VALUE


Set Article to VALUE. 
Returns (1, 'Status message') on success and (0, 'Error Message') on failure.
(In the database, Article will be stored as a int(11).)


=cut


=item CustomField

Returns the current value of CustomField. 
(In the database, CustomField is stored as int(11).)



=item SetCustomField VALUE


Set CustomField to VALUE. 
Returns (1, 'Status message') on success and (0, 'Error Message') on failure.
(In the database, CustomField will be stored as a int(11).)


=cut


=item Content

Returns the current value of Content. 
(In the database, Content is stored as text.)



=item SetContent VALUE


Set Content to VALUE. 
Returns (1, 'Status message') on success and (0, 'Error Message') on failure.
(In the database, Content will be stored as a text.)


=cut


=item Creator

Returns the current value of Creator. 
(In the database, Creator is stored as int(11).)


=cut


=item Created

Returns the current value of Created. 
(In the database, Created is stored as datetime.)


=cut


=item LastUpdatedBy

Returns the current value of LastUpdatedBy. 
(In the database, LastUpdatedBy is stored as int(11).)


=cut


=item LastUpdated

Returns the current value of LastUpdated. 
(In the database, LastUpdated is stored as datetime.)


=cut



sub _CoreAccessible {
    {
     
        id =>
		{read => 1, type => 'int(11)', default => ''},
        Article => 
		{read => 1, write => 1, type => 'int(11)', default => '0'},
        CustomField => 
		{read => 1, write => 1, type => 'int(11)', default => '0'},
        Content => 
		{read => 1, write => 1, type => 'text', default => ''},
        Creator => 
		{read => 1, auto => 1, type => 'int(11)', default => '0'},
        Created => 
		{read => 1, auto => 1, type => 'datetime', default => ''},
        LastUpdatedBy => 
		{read => 1, auto => 1, type => 'int(11)', default => '0'},
        LastUpdated => 
		{read => 1, auto => 1, type => 'datetime', default => ''},

 }
};


        eval "require RT::FM::ArticleCFValue_Overlay";
        if ($@ && $@ !~ /^Can't locate/) {
            die $@;
        };

        eval "require RT::FM::ArticleCFValue_Local";
        if ($@ && $@ !~ /^Can't locate/) {
            die $@;
        };




=head1 SEE ALSO

This class allows "overlay" methods to be placed
into the following files _Overlay is for a System overlay by the original author,
while _Local is for site-local customizations.  

These overlay files can contain new subs or subs to replace existing subs in this module.

If you'll be working with perl 5.6.0 or greater, each of these files should begin with the line 

   no warnings qw(redefine);

so that perl does not kick and scream when you redefine a subroutine or variable in your overlay.

RT::FM::ArticleCFValue_Overlay, RT::FM::ArticleCFValue_Local

=cut


1;
