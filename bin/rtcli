#!/usr/bin/perl -w
# BEGIN LICENSE BLOCK
# 
# Copyright (c) 1996-2002 Jesse Vincent <jesse@bestpractical.com>
# 
# (Except where explictly superceded by other copyright notices)
# 
# This work is made available to you under the terms of Version 2 of
# the GNU General Public License. A copy of that license should have
# been provided with this software, but in any event can be snarfed
# from www.gnu.org
# 
# This work is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
# 
# 
# Unless otherwise specified, all modifications, corrections or
# extensions to this work which alter its source code become the
# property of Best Practical Solutions, LLC when submitted for
# inclusion in the work.
# 
# 
# END LICENSE BLOCK

use strict;

use LWP::UserAgent;
use HTTP::Cookies;
use Getopt::Long;
use File::Temp qw/tempfile/;
use vars qw/$JAR $UA $BaseURI/;

$BaseURI = 'http://localhost/REST';
my $action = shift @ARGV || '';

SetupUA();

if ( $action =~ /login/ ) {
    Login();
}
elsif ( $action =~ /logout/ ) {
    Logout();
}
elsif ( $action =~ /show/ ) {
    Show();

}
elsif ( $action =~ /update/ ) {
    Update();

}
else {
    print "$action not a valid command. $0 help will tell you what's what\n";
}

sub Show {
    my %args;
    GetOptions( \%args, 'id=s' );

    my $uri = "$BaseURI/ticket/" . $args{'id'} . "/verbose";
    print "Fetching $uri" if Debug();
    my $response = $UA->get($uri);
    print $response->content();
}

sub Logout {
    $JAR->clear();

}

sub Update {
    my %args;
    GetOptions( \%args, 'id=s' );
    my $uri      = "$BaseURI/ticket/" . $args{'id'};
    my $response = $UA->get($uri);
    my ( $fh, $fnam ) = tempfile('rt.XXXXXXXX');
    print $fh $response->content();

    close($fh);
    system( $ENV{VISUAL} || $ENV{EDITOR} || '/usr/bin/vi', $fnam );
    my $content; 
    open(FH, "<$fnam") || die "Couldn't open $fnam: $@";
    while (my $line = <FH>) {
        $content .= $line;
    }
    close (FH);

    $response = $UA->post( $BaseURI . '/modify', { id => $args{'id'}, content => $content } );
    print $response->content();
    if ( $response->code >= 300 ) {
        print "File saved in $fnam\n";
    }
    else {
        unlink($fnam);
    }
}

sub Login {
    my $response = $UA->post( $BaseURI . '/login',
        { user => 'root', pass => 'password', SessionType => 'REST' } );
    print $response->content();
}

sub SetupUA {

    my $jarfile = "$ENV{'HOME'}/.rt_cookies";

    unless ( -f $jarfile ) {
        open( JAR, ">$jarfile" ) || die "Couldn't open cookie jar $jarfile";
        print JAR "#LWP-Cookies-1.0\n";
        close JAR;

    }

    $JAR = HTTP::Cookies->new(
        autosave       => 1,
        ignore_discard => 1,
        file           => $jarfile
    );

    $UA = LWP::UserAgent->new( cookie_jar => $JAR, agent => 'rtcli/0' );
}

sub Debug { 1 }
