#!@PERL@

use strict;
use warnings;

use lib "@LOCAL_LIB_PATH@";
use lib "@RT_LIB_PATH@";

use RT;
RT::LoadConfig;
RT::Init;

$| = 1;

use Getopt::Long;
use Digest::SHA;
my $fix;
GetOptions("fix!" => \$fix);

use RT::Users;
my $users = RT::Users->new( $RT::SystemUser );
$users->Limit(
    FIELD => 'Password',
    OPERATOR => 'IS NOT',
    VALUE => 'NULL',
    ENTRYAGGREGATOR => 'AND',
);
$users->Limit(
    FIELD => 'Password',
    OPERATOR => '!=',
    VALUE => '*NO-PASSWORD*',
    ENTRYAGGREGATOR => 'AND',
);
$users->Limit(
    FIELD => 'Password',
    OPERATOR => 'NOT STARTSWITH',
    VALUE => '!',
    ENTRYAGGREGATOR => 'AND',
);
push @{$users->{'restrictions'}{ "main.Password" }}, "AND", {
    field => 'LENGTH(main.Password)',
    op => '<',
    value => '40',
};

my $count = $users->Count;
if ($count == 0) {
    print "No users with unsalted or weak cryptography found.\n";
    exit 0;
}

if ($fix) {
    print "Upgrading $count users...\n";
    while (my $u = $users->Next) {
        my $stored = $u->__Value("Password");
        my $raw;
        if (length $stored == 32) {
            $raw = pack("H*",$stored);
        } elsif (length $stored == 22) {
            $raw = MIME::Base64::decode_base64($stored);
        } elsif (length $stored == 13) {
            printf "%20s => Old crypt() format, cannot upgrade\n", $u->Name;
        } else {
            printf "%20s => Unknown password format!\n", $u->Name;
        }
        next unless $raw;

        my $salt = pack("C4",map{int rand(256)} 1..4);
        my $sha = Digest::SHA::sha256(
            $salt . $raw
        );
        $u->_Set(
            Field => "Password",
            Value => MIME::Base64::encode_base64(
                $salt . substr($sha,0,26)),
        );
    }
    print "Done.\n";
    exit 0;
} else {
    if ($count < 20) {
        print "$count users found with unsalted or weak-cryptography passwords:\n";
        print "      Id | Name\n", "-"x9, "+", "-"x9, "\n";
        while (my $u = $users->Next) {
            printf "%8d | %s\n", $u->Id, $u->Name;
        }
    } else {
        print "$count users found with unsalted or weak-cryptography passwords\n";
    }

    print "\n", "Run again with --fix to upgrade.\n";
    exit 1;
}
