use strict;
use warnings;

our @Initial = (
    sub {
        $RT::Logger->info("Going to migrate dashboard subscriptions");

        my $attrs = RT::Attributes->new( RT->SystemUser );
        $attrs->Limit( FIELD => 'ObjectType', VALUE => 'RT::User' );
        $attrs->Limit( FIELD => 'Name', VALUE => 'Subscription' );

        while ( my $attr = $attrs->Next ) {
            my %fields;
            my $frequency = $attr->SubValue('Frequency');

            if ($frequency eq 'daily') {
                for my $day (qw/Monday Tuesday Wednesday Thursday Friday Saturday Sunday/) {
                    $fields{$day} = 1;
                }
            }
            elsif ($frequency eq 'm-f') {
                $fields{Frequency} = 'daily';
                for my $day (qw/Monday Tuesday Wednesday Thursday Friday/) {
                    $fields{$day} = 1;
                }
                $fields{Saturday} = $fields{Sunday} = 0;
            }
            else {
                next;
            }

            my ($ok, $msg) = $attr->SetSubValues(%fields);

            if (!$ok) {
                $RT::Logger->error("Couldn't update subscription $msg");
            }
        }
        return 1;
    },
);

require RT::Asset;

our @Catalogs;

@Catalogs = ({
    Name        => "General assets",      # loc
    Description => "The default catalog", # loc
});

our @Final;

# Create global role groups
push @Final, sub {
    foreach my $type (RT::Asset->Roles) {
        next if $type eq "Owner";   # There's a core global role group for Owner

        my $group = RT->System->RoleGroup( $type );
        if ( $group->id ) {
            RT->Logger->debug("Assets role '$type' already exists.");
            next;
        }

        $group = RT::Group->new( RT->SystemUser );
        my ($ok, $msg) = $group->CreateRoleGroup(
            Object              => RT->System,
            Name                => $type,
            InsideTransaction   => 0,
        );
        RT->Logger->error("Couldn't create global asset role group '$type': $msg")
            unless $ok;
    }
};

