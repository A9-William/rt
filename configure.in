AC_REVISION($Revision: 1.1 $)

AC_INIT(RT, 3.0, rt-3.0-bugs@fsck.com)

dnl version numbers
RT_VERSION_MAJOR=2
RT_VERSION_MINOR=1
RT_VERSION_PATCH=47

AC_SUBST(RT_VERSION_MAJOR)
AC_SUBST(RT_VERSION_MINOR)
AC_SUBST(RT_VERSION_PATCH)

dnl perl
AC_PATH_PROG(PERL, perl, no)
if test $PERL = no ; then
    echo "Can't find perl!"
    exit
fi

dnl RT_PATH -> --prefix
AC_ARG_WITH(rt-path,
            [  --with-rt-path=PATH         Name of the directory you want to install RT in (default: /opt/rt3)],
            RT_PATH=$withval,
            RT_PATH=/opt/rt3)
AC_SUBST(RT_PATH)

dnl RT__LOCAL_PATH
AC_ARG_WITH(rt-local-path,
            [  --with-local-path=PATH Name of the directory you want locally added html components to be drawn from  (default: \$RT_PATH/local)],
            RT__LOCAL_PATH=$withval,
           RT_LOCAL_PATH="$RT_PATH/local")
AC_SUBST(RT_LOCAL_PATH)


dnl RT_LIB_PATH -> --libdir
AC_ARG_WITH(rt-lib-path,
            [  --with-rt-lib-path=PATH     Name of the directory you want to install RT libraries in (default: \$RT_PATH/lib)],
            RT_LIB_PATH=$withval,
            RT_LIB_PATH="$RT_PATH/lib")
AC_SUBST(RT_LIB_PATH)

dnl RT_ETC_PATH -> --sysconfdir
AC_ARG_WITH(rt-etc-path,
            [  --with-rt-etc-path=PATH     Name of the directory you want to install RT config in (default: \$RT_PATH/etc)],
            RT_ETC_PATH=$withval,
            RT_ETC_PATH="$RT_PATH/etc")
AC_SUBST(RT_ETC_PATH)

dnl CONFIG_FILE_PATH -> 
AC_ARG_WITH(rt-config-path,
            [  --with-rt-config--path=PATH     Name of the directory you want to install RT config in (default: \$RT_ETC_PATH)],
            CONFIG_FILE_PATH=$withval,
            CONFIG_FILE_PATH="$RT_ETC_PATH")
AC_SUBST(CONFIG_FILE_PATH)

dnl RT_BIN_PATH -> --bindir
AC_ARG_WITH(rt-bin-path,
            [  --with-rt-bin-path=PATH     Name of the directory you want to install RT binaries in (default: \$RT_PATH/bin)],
            RT_BIN_PATH=$withval,
            RT_BIN_PATH="$RT_PATH/bin")
AC_SUBST(RT_BIN_PATH)

dnl RT_SBIN_PATH -> --sbindir
AC_ARG_WITH(rt-sbin-path,
            [  --with-rt-sbin-path=PATH     Name of the directory you want to install RT system binaries in (default: \$RT_PATH/sbin)],
            RT_SBIN_PATH=$withval,
            RT_SBIN_PATH="$RT_PATH/sbin")
AC_SUBST(RT_SBIN_PATH)


dnl RT_VAR_PATH -> --vardir
AC_ARG_WITH(rt-var-path,
            [  --with-rt-var-path=PATH     Name of the directory you want to install RT's transient data files in (default: \$RT_PATH/var)],
            RT_VAR_PATH=$withval,
            RT_VAR_PATH="$RT_PATH/var")
AC_SUBST(RT_VAR_PATH)

dnl RT_MAN_PATH -> --mandir
AC_ARG_WITH(rt-man-path,
            [  --with-rt-man-path=PATH     Name of the directory you want to install RT man pages in (default: \$RT_PATH/man)],
            RT_MAN_PATH=$withval,
            RT_MAN_PATH="$RT_PATH/man")
AC_SUBST(RT_MAN_PATH)

dnl MASON_DATA_PATH
AC_ARG_WITH(rt-mason-data-path,
            [  --with-mason-data-path=PATH Name of the directory you want to be the HTML::Mason docroot (default: \$RT_VAR_PATH/mason_data)],
            MASON_DATA_PATH=$withval,
            MASON_DATA_PATH="$RT_VAR_PATH/mason_data")
AC_SUBST(MASON_DATA_PATH)

dnl MASON_SESSION_PATH
AC_ARG_WITH(rt-mason-session-path,
            [  --with-mason-session-path=PATH Name of the directory you want to be the HTML::Mason docroot (default: \$RT_VAR_PATH/session)],
            MASON_SESSION_PATH=$withval,
            MASON_SESSION_PATH="$RT_VAR_PATH/session_data")
AC_SUBST(MASON_SESSION_PATH)

dnl MASON_HTML_PATH
AC_ARG_WITH(rt-mason-html-path,
            [  --with-mason-html-path=PATH Name of the directory you want to be the HTML::Mason docroot (default: \$RT_PATH/html)],
            MASON_HTML_PATH=$withval,
            MASON_HTML_PATH="$RT_PATH/html")
AC_SUBST(MASON_HTML_PATH)


dnl MASON_LOCAL_HTML_PATH
AC_ARG_WITH(rt-mason-local-html-path,
            [  --with-mason-local-html-path=PATH Name of the directory you want locally added html components to be drawn from  (default: \$RT_LOCAL_PATH/html)],
            MASON_LOCAL_HTML_PATH=$withval,
            MASON_LOCAL_HTML_PATH="$RT_LOCAL_PATH/html")
AC_SUBST(MASON_LOCAL_HTML_PATH)


dnl LOCAL_LEXICON_PATH
AC_ARG_WITH(rt-local-lexicon-path,
            [  --with-local-lexicon-path=PATH Name of the directory you want locally added lexicon files to be drawn from  (default: \$RT_LOCAL_PATH/po)],
            LOCAL_LEXICON_PATH=$withval,
            LOCAL_LEXICON_PATH="$RT_LOCAL_PATH/po")
AC_SUBST(LOCAL_LEXICON_PATH)

dnl DESTDIR
AC_ARG_WITH(rt-destdir,
            [  --with-destdir=PATH         path where RT will eventuall reside (if different from \$RT_PATH)],
            DESTDIR=$withval,
            DESTDIR=)
AC_SUBST(DESTDIR)

dnl RTGROUP
AC_ARG_WITH(rt-group,
            [  --with-rt-group=GROUP       chgrp all files to GROUP (default: rt)],
            RTGROUP=$withval,
            RTGROUP=rt)
AC_SUBST(RTGROUP)

dnl BIN_OWNER
AC_ARG_WITH(bin-owner,
            [  --with-bin-owner=OWNER      User that should own rt binaries (default root)],
            BIN_OWNER=$withval,
            BIN_OWNER=root)
AC_SUBST(BIN_OWNER)

dnl LIBS_OWNER
AC_ARG_WITH(libs-owner,
            [  --with-libs-owner=OWNER     User that should own all of RT's libraries (default root)],
            LIBS_OWNER=$withval,
            LIBS_OWNER=root)
AC_SUBST(LIBS_OWNER)

dnl LIBS_GROUP
AC_ARG_WITH(libs-group,
            [  --with-libs-group=GROUP     Group that should own rt binaries (default bin)],
            LIBS_GROUP=$withval,
            LIBS_GROUP=bin)
AC_SUBST(LIBS_GROUP)

dnl RT_LOG_PATH
AC_ARG_WITH(rt-log-path,
            [  --with-rt-log-path=PATH     Name of the directory in which you want logs to appear (default: /\$RT_PATH/var/log)],
            RT_LOG_PATH=$withval,
            RT_LOG_PATH="$RT_PATH/var/log")
AC_SUBST(RT_LOG_PATH)

dnl DB_TYPE
AC_ARG_WITH(db-type,
            [  --with-db-type=TYPE         what sort of database RT trys to talk to (default: mysql)], 
            DB_TYPE=$withval,
            DB_TYPE=mysql)
AC_SUBST(DB_TYPE)

dnl DB_HOST
AC_ARG_WITH(db-host,
            [  --with-db-host=HOSTNAME     FQDN of database server (default: localhost)],
            DB_HOST=$withval,
            DB_HOST=localhost)
AC_SUBST(DB_HOST)



dnl DB_PORT
AC_ARG_WITH(db-port,
            [  --with-db-port=PORT         Port on which the database server on \$DB_HOST listen],
            DB_PORT=$withval,
            DB_PORT=)
AC_SUBST(DB_PORT)



dnl DB_RT_HOST
AC_ARG_WITH(db-rt-host,
            [  --with-db-rt-host=HOSTNAME  FQDN of database server (default: localhost)],
            DB_RT_HOST=$withval,
            DB_RT_HOST=localhost)
AC_SUBST(DB_RT_HOST)


dnl DB_DATABASE_ADMIN
AC_ARG_WITH(db-dba,
            [  --with-db-dba=DBA   name of the local database administrator (default: root)],
            DB_DBA=$withval,
            DB_DBA=root)
AC_SUBST(DB_DBA)


dnl DB_DATABASE
AC_ARG_WITH(db-database,
            [  --with-db-database=DBNAME   name of the rt database (default: rt3)],
            DB_DATABASE=$withval,
            DB_DATABASE=rt3)
AC_SUBST(DB_DATABASE)


dnl DB_RT_USER
AC_ARG_WITH(db-rt-user,
            [  --with-db-rt-user=DBUSER    name of database user (default: rt_user)],
            DB_RT_USER=$withval,
            DB_RT_USER=rt_user)
AC_SUBST(DB_RT_USER)

dnl DB_RT_PASS
AC_ARG_WITH(db-rt-pass,
            [  --with-db-rt-pass=PASSWORD  password for \$DBUSER (default: rt_pass)],
            DB_RT_PASS=$withval,
            DB_RT_PASS=rt_pass)
AC_SUBST(DB_RT_PASS)

dnl WEB_USER
AC_ARG_WITH(web-user,
            [  --with-web-user=USER        name of web server (default: www)],
            WEB_USER=$withval,
            WEB_USER=www)
AC_SUBST(WEB_USER)

dnl WEB_GROUP
AC_ARG_WITH(web-group,
            [  --with-web-group=GROUP      group of web server (default: www)],
            WEB_GROUP=$withval,
            WEB_GROUP=www)
AC_SUBST(WEB_GROUP)

AC_OUTPUT(Makefile)
AC_OUTPUT(etc/RT_Config.pm)
AC_OUTPUT(sbin/initdb)
AC_OUTPUT(lib/RT.pm)

