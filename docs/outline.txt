
   What is RT for?
          
          &RT& is an automated system for monitoring, answering, and
          documenting requests. It was designed as a system to aid
          helpdesks, but could conceivably work just as well for
          development teams, construction groups, political insurgencies,
          or circus performers -- in short, any situation in which a
          particular group of people needs to request information or
          action from another group of people, while monitoring the
          status of these requests.
          
   Why did Jesse write it?
          
          Jesse began &RT& at the urgings of a coworker while working for
          the summer for Utopia, Inc, and continued work while attending
          Wesleyan University and working for Cohesive Network Systems'
          New England Division (at the time, the LeftBank Operation). All
          three groups have benefitted from it, and hoped to share these
          benefits with the user community at large by keeping Jesse fed
          and amused while working. THE VOCABULARY
          
   What is a Transaction?
          
          A Transaction is the most fundamental unit of matter under
          &RT&. It may consist of a single emailed communication or a
          single submission from the web interface or CLUI. It is from
          one person, and may begin, continue, or mark the end of a
          Request.
          
   What is a Request?
          
          A Request is a collection of Transactions addressing a single
          topic through its lifetime.
          
   As a user, what are my personal configuration options?
          
          - contact info, mostly
          
   As a queue administrator, what are they?
          
          Notification options:
          
          + Mail request owner on transaction
          + Mail request queue members on transaction (anyone with View)
          + Mail requestors on transaction
          + Autoreply to requestors on creation
          + Mail correspondence to queue members
          + Mail comments to queue members
          + Allow non-members to create requests
            
          User access levels
          
          + admin, manipulate, display, no access
            
          Priority Levels Mail alias Area controls -------
          
  These docs aren't done yet, clearly.
  
          These are notes. Move along, citizens.
          
THE MOVING PARTS

CLUI

RTQ:
Welcome to Request Tracker 0.9.6

       usage: rtq
       Where  are almost any combination of:
           -r                list requests in reverse order
           -t                list most recently modified requests first

           -prio   list requests which have a  satisfying
                             op may be one of = < > <= >= <>
           -owner      prints all requests owned by
           -unowned          prints only the un-taken requests
           -user       prints all requests made by
           -open             prints only the open requests
           -resolved         prints resolved requests
           -stalled          prints stalled requests
           -dead             prints killed requests
           -orderby    Sorts requests by   (one of serial_num,
                             queue_id, requestors, owner, subject, priority,
                             status, date_created, date_due
           -format  allows you to specify the output of rtq.
                              is a string of the form %xn%xn%xn.
                             x is any of the commands associated below.
                             n is an integer which corresponds to the
                             number of spaces you'd like the output of x
                             to take up.  's default value is
                             "%n%p%o%g%l%t%r%s". Valid values of x are:
                             n[6]      serial number
                             p[2]      priority
                             r[9]      requestors
                             o[8]      owner
                             s[30]     subject
                             t[5]      status
                             a[7]      area
                             q[8]      queue
                             g[5]      age
                             l[6]      time since last correspondence
                             wt        tab
                             ws        space
                             wn        newline
                     Without options, rtq prints all open requests.

RT-ADMIN:

Welcome to Request Tracker 0.9.6

user
      -create  create a RT account for
      -modify  modify user info for
      -delete  delete 's RT account
acl   set user 's privileges for queue
                   if  is ommitted, list user 's ACLs

queue -create               create a new queue called
      -modify               modify 's settings
      -delete               completely wipe out
      -area add

          adds
          
   to -area delete remove from RT: Welcome to Request Tracker 0.9.6 RT
   CLI Flags and their arguments
   ----------------------------------------------- -create Interactively
   create a new request -resolve Change 's status to resolved -open
   Change 's status to open -stall Change 's status to stalled -show
   Display current status of -take Become owner of (if unowned) -steal
   Become owner of (if owned by another) -untake Make ownerless (if owned
   by you) -give Make owner of -user Change the requestor ID of to -show
   Display transaction history and status of -due Change 's due date to
   (MM/DD/YY) -comment Add comments about from STDIN -respond Respond to
   -subject Change 's subject to -queue Change 's queue to -area Change
   's area to -prio Change 's priority to -finalprio Change 's final
   priority to -notify Note that 's requestor was notified -merge Merge
   into -kill Permanently remove from the database THE WEB INTERFACE:
   User: Login , View Queue (and view options therein, and Refresh),
   Create Requests, View History, Logout Manipulator: Comment, Reply,
   Take, Resolve VIA EMAIL: create a request Reply to a Request (goes to
   initiator, depending on queue settings) Comment on Request's (doesn't
   go to users) Action: (lib/rt/ui/mail) (mail to any rt alias with %rt
   help)
