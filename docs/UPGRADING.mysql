If you did not start by reading the README file, please start there;
these steps do not list the full upgrading process, merely a part which
is sometimes necessary.

This file applies if:
 1) You are migrating from MySQL 4.0 to MySQL 4.1 or above
                      OR
 2) You are upgrading RT from versions prior to 3.8.0, even if your old
    RT was installed on MySQL 4.1 or newer

If neither of the above cases apply, your should upgrade as per the
instructions in the README.

These changes are necessary because MySQL 4.1 and greater changed some
aspects of character set handling that may result in RT failures; this
will manifest as multiple login requests, corrupted binary attachments,
and corrupted image custom fields, among others.  In order to resolve
this issue, the upgrade process will need to modify the schema.


=== Upgrading RT from versions prior to 3.8.0 ===

 1) Backup RT's database. Use --default-character-set=binary if mysql
    server is 4.1 or newer. Test that you can restore from this backup.

 2) Follow instructions in the README file to step 6b.

 3) Apply changes described in step 6b, but only up to version 3.7.87.

 4) Apply the RT 3.8 schema upgrades. Included in RT is the script
    etc/upgrade/upgrade-mysql-schema.pl that will generate the
    appropriate SQL queries:

        perl etc/upgrade/upgrade-mysql-schema.pl db user pass > queries.sql

    If your mysql database is on a remote host, you can run the script
    like this instead:

        perl etc/upgrade/upgrade-mysql-schema.pl db:host user pass > queries.sql

 5) Check the sanity of the SQL queries in the queries.sql file
    yourself, or consult with your DBA.

 6) Apply the queries. Note that this step can take a while; it may also
    require additional space on your hard drive comparable with size of
    your tables.

        mysql -u root -p rt3 < queries.sql

    NOTE that 'rt3' is the default name of the RT database, change it in
    the command above if your database is named differently.

    This step should not produce any errors or warnings. If you see any,
    restore your database from the backup you made at step 1, and send a
    report to the rt-users@lists.bestpractical.com mailing list.

 7) Re-run the rt-setup-database command from step 6b of the README,
    applying the rest of the upgrades, and follow the README's remaining
    steps.

 8) Test everything. The most important parts you have to test:
     * binary attachments, like docs, PDFs, and images
     * binary custom fields
     * everything that may contain characters other than ASCII



=== Migrating from MySQL 4.0 to MySQL 4.1 and newer ===

Upgrading both MySQL and RT at the same time is a bad idea. The process
becomes more complicated, more time consuming, has a greater chance to
fail, and is much harder to debug.

It is a much better idea to perform the upgrade in two steps. First
upgrade MySQL from 4.0 to 4.1 or above, then complete the RT
upgrade. Remember the following:

* Don't use utf8 as MySQL's character set. This is the default in some
  Linux distributions.
* import/export MySQL dumps using binary character set.

When you're sure that everything is fine, you may upgrade RT using the
instructions above.

If you still want to upgrade MySQL and RT simultaneously, then you can
do the following:

 1) Install a new RT on MySQL 4.1 or newer.

 2) Test that this new clean RT works on this new database.

 3) Dump the database from MySQL 4.0.

 4) Configure MySQL 4.1 and newer to use Latin1 as default character set
    everywhere.

 5) Import the dump into the new MySQL server, replacing your empty database you
    created at step 1, use --default-character-set=binary on restore.

 6) At this point you have RT 3.8.x code base using an old database. You can
    upgrade RT using the instructions above.
