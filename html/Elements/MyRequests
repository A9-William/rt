%# BEGIN LICENSE BLOCK
%# 
%# Copyright (c) 1996-2003 Jesse Vincent <jesse@bestpractical.com>
%# 
%# (Except where explictly superceded by other copyright notices)
%# 
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%# 
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%# 
%# Unless otherwise specified, all modifications, corrections or
%# extensions to this work which alter its source code become the
%# property of Best Practical Solutions, LLC when submitted for
%# inclusion in the work.
%# 
%# 
%# END LICENSE BLOCK
<& /Elements/TitleBoxStart, title => loc("[_1] highest priority tickets I requested...", $rows), bodyclass=> '' &>
<TABLE BORDER=0 cellspacing=0 cellpadding=1 WIDTH=100%>
<TR>
<TH align=right><&|/l&>#</&></TH>
<TH align=left><&|/l&>Subject</&></TH>
<TH align=left><&|/l&>Queue</&></TH>
<TH align=left><&|/l&>Status</&></TH>
<TH align=left><&|/l&>Owner</&></TH>
</TR>
% my $i;
% while (my $Ticket = $MyTickets->Next) {
% $i++;
<TR class="<% $i%2 ? 'oddline' : 'evenline'%>" >
% my @cols = $MyTickets->DisplayColumns;
% foreach my $col (@cols) {
<TD>
% if ($map->{$col}) { $col = $map->{$col} ;
% $m->out(&{$col->{value}}($Ticket));

% my $cmd = "\$Ticket->$col()";
% eval {$m->out(eval $cmd)}|| $m->out($@);
% } else {

%$col =~ s/##(.*?)##/&{$map->{$1}->{value}}($Ticket);/ge;
<%$col|n%>
% }

</TD>
% }

</TR>
% }
</TABLE>
<& /Elements/TitleBoxEnd &> 
<%INIT>

my $map = {
    QueueName             => { value => sub { return $_[0]->QueueObj->Name}},
    OwnerName             => { value => sub { return $_[0]->OwnerObj->Name}},
    id             => { value => sub { return $_[0]->id}},
    Status             => { value => sub { return $_[0]->Status}},
    Subject             => { value => sub { return $_[0]->Subject}},
    ExtendedStatus => {
        title => loc('Status'),
        value => sub {
            my $Ticket = shift;

            if ( $Ticket->HasUnresolvedDependencies ) {
                if (    $Ticket->HasUnresolvedDependencies( Type => 'approval' )
                     or $Ticket->HasUnresolvedDependencies( Type => 'code' ) ) {
                    return "<em>" . loc('(pending approval)') . "</em>";
                }
                else {
                    return "<em>" . loc('(pending other tickets)') . "</em>";
                }
            }
            else {
                return loc( $Ticket->Status );
            }

          }
    }
};

my $rows = 10;
my $MyTickets;
$MyTickets = new RT::Tickets ($session{'CurrentUser'});

$MyTickets->FromSQL("SELECT '<a href=\"/Ticket/Display.html?id=##id##\">##id##</a>', '<a href=\"/Ticket/Display.html?id=##id##\">##Subject##</a>', QueueName, ExtendedStatus, OwnerName WHERE Requestor = '".$session{'CurrentUser'}->EmailAddress."' AND ( Status = 'new' OR Status = 'open')");


$MyTickets->OrderBy(FIELD => 'Priority', ORDER => 'DESC'); 

</%INIT>
