<%args>
$Query => "id > 0"
$PrimaryGroupBy => 'Queue'
$SecondaryGroupBy => undef
$ChartStyle => 'bars'
</%args>
<%init>
my @keys;
my @values;
my $chart_class;
use GD;
use GD::Text;

if ($ChartStyle eq 'pie') {
    require GD::Graph::pie;
    $chart_class = "GD::Graph::pie";
} else {
    require GD::Graph::bars;
    $chart_class = "GD::Graph::bars";
}

my $chart = $chart_class->new( 600 => 400 );
if ($chart_class eq "GD::Graph::bars") {
    $chart->set(
        x_label => $PrimaryGroupBy,
        x_labels_vertical => 1,
        y_label => 'Tickets',
        show_values => 1
    );
    $chart->set_legend_font( ['verdana', 'arial', gdMediumBoldFont], 12);
}

use RT::Report::Tickets;
my $tix = RT::Report::Tickets->new( $session{'CurrentUser'} );
$tix->FromSQL( $Query );
my $count_name = $tix->Column( FUNCTION => 'COUNT', FIELD => 'id' );
$tix->GroupBy( $PrimaryGroupBy );
my $value_name = $tix->Column( FIELD => $PrimaryGroupBy );

my %class = (
    Queue => 'RT::Queue',
    Owner => 'RT::User',
);
my $class = $class{ $PrimaryGroupBy };

while ( my $entry = $tix->Next ) {
    if ( $class ) {
        my $q = $class->new( $session{'CurrentUser'} );
        $q->Load( $entry->__Value( $value_name ) );
        push @keys, $q->Name;
    }
    else {
        push @keys, $entry->__Value($value_name);
    }

    $keys[-1] ||= loc('(no value)');
    if ($chart_class eq 'GD::Graph::pie') {
        $keys[-1] .= " - ". $entry->__Value( $count_name );
    }
    push @values, $entry->__Value($count_name);
}

unless (@keys && @values) {
    @keys = ('');
    @values = (0);
}

my $plot = $chart->plot( [ [@keys], [@values] ] ) or die $chart->error;
$r->content_type('image/png');
$m->out( $plot->png );
$m->abort;
</%init>
