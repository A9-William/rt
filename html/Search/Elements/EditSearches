%# BEGIN BPS TAGGED BLOCK {{{
%# 
%# COPYRIGHT:
%#  
%# This software is Copyright (c) 1996-2006 Best Practical Solutions, LLC 
%#                                          <jesse@bestpractical.com>
%# 
%# (Except where explicitly superseded by other copyright notices)
%# 
%# 
%# LICENSE:
%# 
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%# 
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%# 
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
%# 
%# 
%# CONTRIBUTION SUBMISSION POLICY:
%# 
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%# 
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%# 
%# END BPS TAGGED BLOCK }}}
<&| /Widgets/TitleBox, title => loc($Title)&>

%# Hide all the save functionality if the user shouldn't see it.
% if ($session{'CurrentUser'}->HasRight( Right => 'CreateSavedSearch',
%                                        Object=> $RT::System )) {
<&|/l&>Privacy:</&>
% if ( $Object && $Object->id ) {
<& SearchPrivacy, Object => $Object->Object &>
% } else {
<& SelectSearchObject, Name => 'SavedSearchOwner', Objects => \@Objects &>
% }
<br />
<&|/l&>Description</&>:
<input size="25" name="SavedSearchDescription" value="<% $Description %>" />

<nobr>
% if ($Id ne 'new') {
% if ($Dirty) {
<input type="submit" class="button" name="SavedSearchRevert" value="<%loc('Revert')%>" />
% }
<input type="submit" class="button" name="SavedSearchDelete" value="<%loc('Delete')%>" />
% if ( $AllowCopy ) {
<input type="submit" class="button" name="SavedSearchCopy"   value="<%loc('Copy')%>" />
% }
</nobr>

% }
<input type="submit" name="SavedSearchSave" value="<%loc('Save')%>" class="button" />
% }
<br />

<&|/l&>Load saved search:</&>
<& SelectSearchesForObjects, Name => 'SavedSearchLoad', Objects => \@Objects, SearchType => $Type &>
<input type="submit" value="<% loc('Load') %>" class="button" />

</&>

<%INIT>
return unless $session{'CurrentUser'}->HasRight(
    Right  => 'LoadSavedSearch',
    Object => $RT::System,
);

# If we're modifying an old query, check if it's been changed
my $Dirty = $m->comp(
    'EditSearches:IsDirty',
    Query => $CurrentSearch,
    SavedSearch => { Id => $Id, Object => $Object, Description => $Description }
);

my @Objects = RT::SavedSearches->new($session{CurrentUser})->_PrivacyObjects;
push @Objects, RT::System->new( $session{'CurrentUser'} )
    if $session{'CurrentUser'}->HasRight( Object=> $RT::System,
					                      Right => 'SuperUser' );

</%INIT>

<%ARGS>
$Id => 'new'
$Object => undef
$Type => 'Ticket'
$Description => ''
$CurrentSearch => {}
$AllowCopy => 1
$Title => 'Saved searches'
</%ARGS>

<%METHOD Init>
<%ARGS>
$Query   => {}
$SavedSearch => {}
</%ARGS>
<%INIT>

my @FIELDS = qw(Query Format OrderBy Order RowsPerPage);

$SavedSearch->{'Id'}          = $ARGS{'SavedSearchId'}          || 'new';
$SavedSearch->{'Description'} = $ARGS{'SavedSearchDescription'} || '';

if ( $ARGS{'SavedSearchRevert'} ) {
    $ARGS{'SavedSearchLoad'} = $SavedSearch->{'Id'};
}

if ( $ARGS{'SavedSearchLoad'} ) {
    my ($container, $id ) = _parse_saved_search ($ARGS{'SavedSearchLoad'});
    my $search = $container->Attributes->WithId( $id );

    $SavedSearch->{'Id'}          = $ARGS{'SavedSearchLoad'};
    $SavedSearch->{'Object'}      = $search;
    $SavedSearch->{'Description'} = $search->Description;
    $Query->{$_} = $search->SubValue($_) foreach @FIELDS;
}
elsif ( $ARGS{'SavedSearchDelete'} ) {
    # We set $SearchId to 'new' above already, so peek into the %ARGS
    my ($container, $id) = _parse_saved_search( $SavedSearch->{'Id'} );
    if ( $container && $container->id ) {
        # We have the object the entry is an attribute on; delete the entry...
        $container->Attributes->DeleteEntry( Name => 'SavedSearch', id => $id );
    }
    $SavedSearch->{'Id'}          = 'new';
    $SavedSearch->{'Object'}      = undef;
}
elsif ( $ARGS{'SavedSearchCopy'} ) {
    $SavedSearch->{'Id'}          = 'new';
    $SavedSearch->{'Object'}      = undef;
    $SavedSearch->{'Description'} = loc( "[_1] copy", $SavedSearch->{'Description'} );
}

if ( $SavedSearch->{'Id'} && $SavedSearch->{'Id'} ne 'new'
     && !$SavedSearch->{'Object'} )
{
    my ($container, $id ) = _parse_saved_search( $ARGS{'SavedSearchId'} );
    $SavedSearch->{'Object'} = $container->Attributes->WithId( $id );
    $SavedSearch->{'Description'} ||= $SavedSearch->{'Object'}->Description;
}

</%INIT>
</%METHOD>

<%METHOD Save>
<%ARGS>
$Query   => {}
$SavedSearch => {}
</%ARGS>
<%INIT>

return unless $ARGS{'SavedSearchSave'};

my @results;
my $obj  = $SavedSearch->{'Object'};
my $id   = $SavedSearch->{'Id'};
my $desc = $SavedSearch->{'Description'};

if ( $obj && $obj->id ) {
    # permission check
    if ($obj->Object->isa('RT::System')) {
        unless ($session{'CurrentUser'}->HasRight( Object=> $RT::System, Right => 'SuperUser')) {
            push @results, [ loc("No permission to save system-wide searches"), 0 ];
            return @results;
        }
    }

    $obj->SetSubValues( %$Query );
    $obj->SetDescription( $desc );
}
elsif ( $id eq 'new' && $ARGS{'SavedSearchOwner'} =~ /^(.*?)-(\d+)$/ ) {
    # We're saving a new search
    my $obj_type = $1;
    my $obj_id   = $2;

    # Find out if we're saving on the user, or a group
    my $container_object = _load_container_object ($obj_type, $obj_id);

    if ( $container_object->id ) {
        # permission check
        if ( $container_object->isa('RT::System') ) {
            unless ($session{'CurrentUser'}->HasRight( Object=> $RT::System, Right => 'SuperUser')) {
                push @results, [ loc("No permission to save system-wide searches"), 0 ];
                return @results;
            }
        }

        my $name = $obj_type eq 'RT::System' ? "Search - $desc" : 'SavedSearch';
        # If we got one or the other, add the saerch
        my ( $search_id, $search_msg ) = $container_object->AddAttribute(
            Name        => $name,
            Description => $desc,
            Content     => $Query,
        );
        unless ( $search_id ) {
            push @results, [ loc("Can't find a saved search to work with").': '.loc($search_msg), 0 ];
            return @results;
        }

        $SavedSearch->{'Object'} =
            $session{'CurrentUser'}->UserObj->Attributes->WithId($search_id);
        # Build new SearchId
        $SavedSearch->{'Id'} =
            ref( $session{'CurrentUser'}->UserObj ) . '-'
                . $session{'CurrentUser'}->UserObj->Id
                . '-SavedSearch-'
                . $SavedSearch->{'Object'}->Id;
    }
}
else {
    push @results, [ loc("Can't save this search"), 0 ];
}

return @results;

</%INIT>
</%METHOD>

<%METHOD IsDirty>
<%ARGS>
$Query   => {}
$SavedSearch => {}
</%ARGS>
<%INIT>

my $obj  = $SavedSearch->{'Object'};
return 0 unless $obj && $obj->id;

foreach( qw(Query Format OrderBy Order RowsPerPage) ) {
    return 1 if $obj->SubValue( $_ ) ne $Query->{$_};
}

return 0;

</%INIT>
</%METHOD>
