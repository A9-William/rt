%# BEGIN LICENSE BLOCK
%# 
%# Copyright (c) 1996-2003 Jesse Vincent <jesse@bestpractical.com>
%# 
%# (Except where explictly superceded by other copyright notices)
%# 
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%# 
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%# 
%# Unless otherwise specified, all modifications, corrections or
%# extensions to this work which alter its source code become the
%# property of Best Practical Solutions, LLC when submitted for
%# inclusion in the work.
%# 
%# 
%# END LICENSE BLOCK
<& /Elements/ListActions, actions => \@results &>

<TABLE>
<TR>
<TD VALIGN=TOP>
<h2><%$caption%></h2>
</TD></TR></TABLE>
<FORM METHOD=GET ACTION="CustomFields.html">
<INPUT TYPE=HIDDEN NAME="id" VALUE="<% $Object->Id %>">
<INPUT TYPE=HIDDEN NAME="ObjectType" VALUE="<% $ObjectType %>">
<input type="checkbox" name="FindDisabledCustomFields"> <&|/l&>Include disabled custom fields in listing.</&>
<input type=submit value="<&|/l&>Go!</&>">
</FORM>
<hr>
<FORM ACTION="CustomFields.html" METHOD=POST>
<INPUT TYPE=HIDDEN NAME="id" VALUE="<% $Object->Id %>">
<INPUT TYPE=HIDDEN NAME="ObjectType" VALUE="<% $ObjectType %>">
<INPUT TYPE=HIDDEN NAME="UpdateCFs" VALUE="1">

% if ($Object->Id) {
<h3>Global Custom Fields</h3>
<& PickCustomFields, CustomFields => \@GlobalCFs, ReadOnly => 1 &>
% }
<h3>Associated Custom Fields (uncheck to unassociate)</h3>
<& PickCustomFields, CustomFields => \@AssociatedCFs, id => $Object->Id, Checked => 1 &>
<h3>Unassociated Custom Fields (check to associate)</h3>
<& PickCustomFields, CustomFields => \@UnassociatedCFs, id => $Object->Id &>

<& /Elements/Submit &>
</FORM>


<%INIT>
my $CustomFields = RT::CustomFields->new($session{'CurrentUser'});
my $caption;
my @results;
my (@GlobalCFs, @AssociatedCFs, @UnassociatedCFs);

# XXX - exception: by "RT::Queue" fields on UI we really mean "RT::Ticket" fields.
my $composite = "$ObjectType--";
$composite = 'RT::Ticket--RT::Queue' if $composite eq 'RT::Queue--';
$CustomFields->LimitToComposite($composite);

if ($FindDisabledCustomFields) {
    $caption = loc("All Custom Fields");
    $CustomFields->{'find_disabled_rows'} = 1;
} else {
    $caption = loc("Enabled Custom Fields");
}

# {{{ deal with moving sortorder of custom fields
if ($CustomField and $Move) {
    my $SourceObj = RT::CustomField->new($session{'CurrentUser'});
    $SourceObj->Load($CustomField) || Abort(loc('No CustomField'));

    my $TargetObj;
    my $target_order = $SourceObj->SortOrder + $Move;
    while (my $CustomFieldObj = $CustomFields->Next) { 
	my $this_order = $CustomFieldObj->SortOrder;

	# if we have an exact match, finish the loop now
	($TargetObj = $CustomFieldObj, last) if $this_order == $target_order;

	# otherwise, we need to apropos toward the general direction
	# ... first, check the sign is correct
	next unless ($this_order - $SourceObj->SortOrder) * $Move > 0;

	# ... next, see if we already have a candidate
	if ($TargetObj) {
	    # ... if yes, compare the delta and choose the smaller one
	    my $orig_delta = abs($TargetObj->SortOrder - $target_order);
	    my $this_delta = abs($this_order - $target_order);
	    next if $orig_delta < $this_delta;
	}

	$TargetObj = $CustomFieldObj;
    }

    if ($TargetObj) {
	# swap their sort order
	my ($s, $t) = ($SourceObj->SortOrder, $TargetObj->SortOrder);
	$TargetObj->SetSortOrder($s);
	$SourceObj->SetSortOrder($t);
	# because order changed, we must redo search for subsequent uses
	$CustomFields->RedoSearch;
    }

    $CustomFields->GotoFirstItem;
}
# }}}

my $id = $Object->Id;
my ($GlobalCFs, $ObjectCFs);
$ObjectCFs = RT::ObjectCustomFields->new($session{'CurrentUser'});
$ObjectCFs->LimitToParentAndComposite(Parent => $Object, Composite => $composite);

if ($id) {
    $GlobalCFs = RT::ObjectCustomFields->new($session{'CurrentUser'});
    $GlobalCFs->LimitToParentAndComposite(ParentType => ref($Object), Composite => $composite);
}

while (my $cf = $CustomFields->Next) { 
    my $cf_id = $cf->Id;

    if ($GlobalCFs and $GlobalCFs->HasEntryForCustomField($cf_id)) {
	push @GlobalCFs, $cf;
	next;
    }

    if ($UpdateCFs) {
	# Go through and delete all the custom field relationships that this object
	# no longer has
	my $key = "Object-$id-CF-$cf_id";
	if ($ARGS{$key}) {
	    push @AssociatedCFs, $cf;
	    if (!$ObjectCFs->HasEntryForCustomField($cf_id)) {
		my ($val, $msg) = $cf->AddToParent($Object, $composite);
		push (@results, $msg);
	    }
	    # my ($val, $msg) = $cf->SetSortOrderForObject(Object => $Object, SortOrder => $ARGS{"Object-$id-CF-$cf_id-SortOrder"});
	}
	else {
	    push @UnassociatedCFs, $cf;
	    if ($ObjectCFs->HasEntryForCustomField($cf_id)) {
		my ($val, $msg) = $cf->RemoveFromParent($Object, $composite);
		push (@results, $msg);
	    }
	}
    }
    elsif ($ObjectCFs->HasEntryForCustomField($cf_id)) {
	push @AssociatedCFs, $cf;
    }
    else {
	push @UnassociatedCFs, $cf;
    }
}

</%INIT>
<%ARGS>
$title => undef
$Move => undef
$Source => undef
$CustomField => undef
$FindDisabledCustomFields => undef
$UpdateCFs => 0
$Object
$ObjectType
</%ARGS>
