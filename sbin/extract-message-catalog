#!/usr/bin/env perl

use strict;
use File::Copy;
use Regexp::Common;

@ARGV = <lib/RT/I18N/*.po> unless @ARGV;

foreach my $lang (@ARGV) {
    $lang =~ s|.*/||; $lang =~ s|\.po$||;
    eval { update($lang) } or warn $@;
}

sub update {
    my $lang = shift;

    print "Updating $lang...\n";
    
    my (%Lexicon, %file);
    my $out = '';

    open _, "lib/RT/I18N/$lang.po" or die $!;
    while (<_>) {
	if (1 .. /^$/) { $out .= $_; next }

	my $msgid = <_>;
	my $msgstr = <_>;
	<_>;
	chomp $msgid;
	chomp $msgstr;
	$msgid =~ s/^msgid "(.*)"$/$1/ or die $msgid;
	$msgstr =~ s/^msgstr "(.*)"$/$1/ or die $msgstr;
	$Lexicon{$msgid}=$msgstr;
    }

    local $/;

    for (<*/*>, <*/*/*>, <*/*/*/*>, <*/*/*/*/*>, <*/*/*/*/*/*>) {
	my $r = $_; open _, $_ or die $!; $_ = <_>;

	while (s!<&\|/l.*?&>(.*?)</&>!!s) {
	    my $u = $1; $u =~ s/\\'/\'/g; $file{$u} .= " $r";
	}

	while (s!loc\(($RE{delimited}{-delim=>"'"}{-esc}{-keep})!!s) {
	    my $u = substr($1, 1, -1); $u =~ s/\\'/\'/g; $file{$u} .= " $r";
	}

	while (s!loc\(($RE{delimited}{-delim=>'"'}{-esc}{-keep})!!s) {
	    my $u = substr($1, 1, -1); $u =~ s/\\'/\'/g; $file{$u} .= " $r";
	}
    }

    foreach (sort keys %file) {
	my $k = $file{$_};

	s/\\/\\\\/g;
	s/\"/\\"/g;
	s/\[_(\d+)\]/%$1/g;
	s/~([\[\]])/$1/g;

	$file{$_} = $k;
	$Lexicon{$_} ||= '';
    }

    my $is_english = ($lang =~/^en(?:[^A-Za-z]|$)/);

    delete $file{''};
    foreach (sort keys %Lexicon) {
	my $f = $file{$_};
	my $nospace = $_;
	$nospace =~ s/ +$//;

	if (!$Lexicon{$_} and $Lexicon{$nospace}) {
	    $Lexicon{$_} = $Lexicon{$nospace} . (' ' x (length($_) - length($nospace)));
	}

	next if !length($Lexicon{$_}) and $is_english;

	$out .= "#:$f\nmsgid \"$_\"\nmsgstr \"$Lexicon{$_}\"\n\n";
    }

    open _, ">lib/RT/I18N/$lang.po" or die $!;
    print _ $out;
    close _;

    return 1;
}
