#!/usr/bin/perl -w
#
# $Header$
# RT is (c) 1996-2001 Jesse Vincent <jesse@fsck.com>

use strict;
use Carp;
use Getopt::Long qw(:config pass_through);

use lib "/home/jesse/projects/fm/lib";
use lib "/home/jesse/projects/fm/etc";

use RT::Framework::Interface::CLI  qw(CleanEnv LoadConfig DBConnect 
	  		       GetCurrentUser GetMessageContent);


use RT::FM::User;
use RT::FM::CurrentUser;

use vars qw($CurrentUser);


#connect to the db
$RT::FM::Handle = new RT::FM::Handle($RT::FM::DatabaseType);
$RT::FM::Handle->Connect();


$CurrentUser = new RT::FM::CurrentUser();

print "Creating system user...";
my $RT_System = new RT::FM::User($CurrentUser); 

my ($val, $msg) = $RT_System->Create(
					       Name => 'RT_System',
					       RealName => 'The RT System itself',
					       IsAdministrator => '1',
					       IsEditor => '1',
					       Creator => '1');

if ($val) {
    print "done.\n";
}
else {
    print "$msg\n";
    exit(1);
}


#Load etc/config.pm and drop privs
LoadConfig();

#Connect to the database and get RT::SystemUser and RT::Nobody loaded
DBConnect();

$CurrentUser->LoadByName('RT_System');



# {{{ Users

my @users = ( 
	     { 
	      Name => 'Nobody',
	      EmailAddress => "nobody\@localhost",
	      RealName => 'Nobody in particular',
		IsAdministrator => '0',
		IsEditor => '0'
	     },
	     
	     { 
	      Name => 'root',
	      RealName => 'Enoch Root',
              Password => 'password',
	      EmailAddress => "root\@localhost",
	      IsEditor => '1',
	      IsAdministrator => '1',
	     }
	    );

# }}}


print "Creating users...";
foreach my $item (@users) {
    my $new_entry = new RT::FM::User($CurrentUser);
    my ($return, $msg) = $new_entry->Create(%$item);
    print "(Error: $msg)"   unless ($return);
    print $return.".";
}
print "done.\n";
